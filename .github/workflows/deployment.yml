name: Deployment-CI/CD

on:
  push:
    branches:
      - 'main'
  # Execute this pipeline when we make a pull request to the main branch:
#  pull_request:
#    branches:
#      - "main"
#    types: [closed]

jobs:
  # Run the collection CI pipeline
  collection-CI:
    name: collection-CI 🚀
    uses: ./.github/workflows/collectionCI.yml

  # Run the trading CI pipeline
  trading-CI:
    name: trading-CI 🚀
    uses: ./.github/workflows/tradingCI.yml

  # Run the client CI pipeline
  client-CI:
    name: client-CI 🚀
    uses: ./.github/workflows/clientCI.yml

  # Build the docker images for all modules
  image-build:
    name: Build & Push Images🚀 🐋
    needs: [collection-CI, trading-CI, client-CI]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch 🛎️
        uses: actions/checkout@v3

      - name: Set up JDK 18 🏗️
        uses: actions/setup-java@v3
        with:
          java-version: 18
          distribution: 'temurin'
          cache: maven

      - name: Login To docker 🐋️
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Create Docker images with JIB  🐋️
        run: mvn -T 2C compile package jib:build -Ddocker_username=${{ secrets.DOCKER_USERNAME }} -Ddocker_password=${{ secrets.DOCKER_PASSWORD }}

      - name: Create FE env file
        working-directory: ./clipper-fe
        run: |
          echo "${{ secrets.ENV_FILE_FE }}" > .env

      - name: Login To docker 🐋️
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Create Docker image for client 🐋️
        working-directory: ./clipper-fe
        run: |
          docker build -t mhormes/client:latest -f Dockerfile .
          docker push mhormes/client:latest

# Deploy disabled -> Stack is not running -> too expensive
#  deploy:
#    name: Deploy to Kubernetes 🚀
#    needs: [image-build]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Login to Azure
#        uses: azure/login@v1
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#
#      - name: Set up Kubernetes context
#        uses: azure/aks-set-context@v1
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
#          resource-group: ${{ secrets.RESOURCE_GROUP }}
#
#      - name: Kubernetes Deploy
#        run: |
#          kubectl apply -f ./.kubernetes/azure/